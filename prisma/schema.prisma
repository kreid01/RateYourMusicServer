generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id       Int        @id @default(autoincrement())
  username String
  email    String
  password String
  reviews  review[]
  playlist playlist[]
  message  message[]
}

model playlist {
  id         Int       @id @default(autoincrement())
  poster     user?     @relation(fields: [posterId], references: [id])
  posterId   Int
  title      String
  content    release[]
  contentIds Int[]
}

model channel {
  id        Int       @id @default(autoincrement())
  release   release?  @relation(fields: [releaseId], references: [id])
  releaseId Int
  title     String
  open      Boolean
  message   message[]
}

model message {
  id        Int      @id @default(autoincrement())
  channel   channel? @relation(fields: [channelId], references: [id])
  channelId Int
  poster    user?    @relation(fields: [posterId], references: [id])
  posterId  Int
  content   String
  postDate  String
}

model review {
  id          Int      @id @default(autoincrement())
  posterId    Int
  releaseId   Int
  release     release? @relation(fields: [releaseId], references: [id])
  postDate    String
  title       String
  description String
  rating      Float
  poster      user?    @relation(fields: [posterId], references: [id])
}

model release {
  id          Int        @id @default(autoincrement())
  type        String
  artistId    Int
  artist      artist?    @relation(fields: [artistId], references: [id])
  title       String
  released    String
  rating      Float
  ratingCount Int
  cover       String
  genres      String[]
  language    String
  tracks      String[]
  review      review[]
  playlists   playlist[]
  channel     channel[]
}

model artist {
  id             Int       @id @default(autoincrement())
  name           String
  born           String
  type           String
  relatedArtists String[]
  genres         String[]
  releases       release[]
}
